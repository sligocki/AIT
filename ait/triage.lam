-- triage calculus in lambda calculus
-- https://github.com/barry-jay-personal/blog/blob/main/2024-12-12-calculus-calculi.md
let
  -- trees are built from nodes by application
  nd = \a\n.n;              -- node (△)
  ap = \x\y\a\n. a x y;     -- application of x to y
  -- apply node to 3 arguments x (reduced), y, and z
  triage = \f0\f1\f2\z. z (\z1. z1
    (\y\_\x. f2 x y)        -- △xy
    f1                      -- △x
    ) f0;                   -- △
  step = \x\y\z. x (\x1\x'. x1
    (\_\w. triage w x' y z) -- △(△wx)yz = z w x
    (ap (ap x' z) (ap y z)) -- △(△x) yz = x z (y z)
    ) y;                    -- △ △   yz = y
  -- evaluate an arbitrary tree
  eval = \t. t  (\t1.       -- delay \z
        eval t1 (\t2.       -- delay \y
             t2 (\t3\x.     -- t3 must be △
             (step (eval x))
                ) (\y\z.t)) (\z.t)) t
in eval
